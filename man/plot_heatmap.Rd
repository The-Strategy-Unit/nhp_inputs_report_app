% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_plots_heatmap.R
\name{plot_heatmap}
\alias{plot_heatmap}
\title{Plot heatmap}
\usage{
plot_heatmap(
  dat,
  focal_scheme_code,
  toggle_mitigator_name,
  toggle_scale_fill_by_mitigator,
  values_displayed,
  heatmap_type,
  colour_binary,
  colour_value_low,
  colour_value_high,
  plot_height,
  font_family = "Arial, Helvetica, Droid Sans, sans"
)
}
\arguments{
\item{dat}{Tibble of mitigator data as produced by `populate_table()` in `fct_tabulate.R`}

\item{toggle_mitigator_name}{Boolean - value from `input$toggle_mitigator_name` - used to decide what to display on y-axis}

\item{toggle_scale_fill_by_mitigator}{Boolean - value from `input$toggle_heatmap_scale_fill_by_mitigator` - used to control whether the colour is scaled across the whole heatmap (FALSE) or applied across each mitigator (TRUE)}

\item{values_displayed}{Character - value from `input$values_displayed` - describing if values represent either percent of activity mitigated or the 80% prediction interval - used to label the scales}

\item{heatmap_type}{Character - value from `input$heatmap_type` - used to control whether a solid colour is applied (binary) or colour is dependent on the value}

\item{colour_binary}{Character - value from `input$heatmap_binary_colour` - hex colour string to use in the binary plots}

\item{colour_value_low}{Character - value from `input$heatmap_value_colour_low` - hex colour string to use in the gradient fill for low values}

\item{colour_value_high}{Character - value from `input$heatmap_value_colour_high` - hex colour string to use in the gradient fill for high values}

\item{name}{Integer - value from `ra$heatmap_min_height` - the number of pixels to set as the height of the plot}
}
\value{
{plotly} object showing heatmap
}
\description{
Produces a {plotly} version of the heatmap showing mitigators on the y-axis
and schemes across the x-axis with the selected mitigator value (mid, low,
high, binary) controlling the fill colour.
}
